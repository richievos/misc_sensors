; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = esp32devarduino, ph_reefpi


[env]
lib_deps =

build_unflags =
    '-std=gnu++11'

build_flags =
    '-std=gnu++17'

[esp32_common]
platform = espressif32@6.1.0
board = esp32dev
framework = arduino

monitor_speed = 115200

build_unflags =
    ${env.build_unflags}

[env:esp32devarduino]
extends = esp32_common

board_build.partitions=min_spiffs.csv

lib_deps =
    ${env.lib_deps}

    adafruit/Adafruit BusIO@^1.14.1
    adafruit/Adafruit GFX Library @ ^1.11.5
    adafruit/Adafruit SSD1306@^2.5.7


lib_extra_dirs =
    matter-libs/


build_flags =
    ${env.build_flags}
    '-DMATTER_ARDUINO_SENSOR=1'

[env:ph_reefpi]
extends = esp32_common

lib_deps =
    ${env.lib_deps}
    bblanchon/ArduinoJson @ ^6.20.1
    me-no-dev/ESP Async WebServer@^1.2.3


build_flags =
    ${env.build_flags}
    '-D OPT_SYS_NAME=reef-ph-v1'
    '-D REEF_PI_PH'

build_src_filter =
    ${env.build_src_filter}
    +<../inputs/*.h>

; upload_protocol = espota
; upload_port = "reef-ph-v1.local"
; upload_port = "192.168.0.226"


[env:tds_reefpi]
extends = esp32_common

lib_deps =
    ${env.lib_deps}
    bblanchon/ArduinoJson @ ^6.20.1
    me-no-dev/ESP Async WebServer@^1.2.3


build_flags =
    ${env.build_flags}
    '-D OPT_SYS_NAME=reef-tds-v1'
    '-D REEF_PI_TDS'

build_src_filter =
    ${env.build_src_filter}
    +<../inputs/*.h>

upload_protocol = espota
; upload_port = "reef-tds-v1.local"
upload_port = "192.168.0.70"


; [env:esp32devespidf]
; platform = espressif32
; board = esp32dev
; framework = espidf

; monitor_speed = 115200

; board_build.partitions=min_spiffs.csv

; lib_deps =
;     ${env.lib_deps}

; build_unflags =
;     ${env.build_unflags}

; build_flags =
;     ${env.build_flags}

